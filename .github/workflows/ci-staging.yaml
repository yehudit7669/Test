name: Staging - Build and Push to GCR

on:
  push:
    branches:
      - develop

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_SA_EMAIL: ${{ secrets.GCP_SA_EMAIL }}
  GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
  SERVICE: wizer-fe
  REGISTRY: gcr.io


jobs:
  setup-build-publish-deploy:
    permissions:
      contents: 'read'
      id-token: 'write'

    name: Setup, Build, and Publish
    runs-on: ubuntu-latest
    
    steps:
    - name: Slack Notify
      uses: rtCamp/action-slack-notify@v2.2.0
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

    - name: Checkout
      uses: actions/checkout@v3


    - id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    # Configure docker to use the gcloud command-line tool as a credential helper
    - run: |
        # Set up docker to authenticate
        # via gcloud command-line tool.
        gcloud auth configure-docker

    # Build the Docker image
    - name: Build
      run: |
        docker build -t $REGISTRY/$GCP_PROJECT_ID/$SERVICE:${GITHUB_SHA} .

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |
        docker push $REGISTRY/$GCP_PROJECT_ID/$SERVICE:${GITHUB_SHA}

    - id: 'deploy'
      uses: google-github-actions/deploy-cloudrun@v1
      with:
        service: ${{env.SERVICE}}-staging
        image: ${{ env.REGISTRY }}/${{ env.GCP_PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}

    - name: 'Use output'
      run: 'curl "${{ steps.deploy.outputs.url }}"'